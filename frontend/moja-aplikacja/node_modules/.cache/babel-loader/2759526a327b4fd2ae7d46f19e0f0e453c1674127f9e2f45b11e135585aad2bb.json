{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\szczp\\\\Desktop\\\\mojprojekt\\\\frontend\\\\moja-aplikacja\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport jwtDecode from 'jwt-decode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nconst AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      const decoded = jwtDecode(token);\n      setUser(decoded);\n    }\n  }, []);\n  const login = async (email, password) => {\n    // Perform login API request here\n    // Assuming the API returns a token\n    const response = await fetch('/api/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    });\n    const data = await response.json();\n    localStorage.setItem('token', data.token);\n    const decoded = jwtDecode(data.token);\n    setUser(decoded);\n    navigate('/konto');\n  };\n  const register = async (email, password) => {\n    // Perform registration API request here\n    // Assuming the API returns a token\n    const response = await fetch('/api/register', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    });\n    const data = await response.json();\n    localStorage.setItem('token', data.token);\n    const decoded = jwtDecode(data.token);\n    setUser(decoded);\n    navigate('/konto');\n  };\n  const wylogowanie = () => {\n    localStorage.removeItem('token');\n    setUser(null);\n    navigate('/');\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      login,\n      register,\n      wylogowanie\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"/48TlfV0adSMEvsbW2gk5sMeopI=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nexport { AuthContext, AuthProvider };\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useNavigate","jwtDecode","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","navigate","token","localStorage","getItem","decoded","login","email","password","response","fetch","method","headers","body","JSON","stringify","data","json","setItem","register","wylogowanie","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/szczp/Desktop/mojprojekt/frontend/moja-aplikacja/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport jwtDecode from 'jwt-decode';\r\n\r\nconst AuthContext = createContext();\r\n\r\nconst AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      const decoded = jwtDecode(token);\r\n      setUser(decoded);\r\n    }\r\n  }, []);\r\n\r\n  const login = async (email, password) => {\r\n    // Perform login API request here\r\n    // Assuming the API returns a token\r\n    const response = await fetch('/api/login', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ email, password }),\r\n    });\r\n    const data = await response.json();\r\n    localStorage.setItem('token', data.token);\r\n    const decoded = jwtDecode(data.token);\r\n    setUser(decoded);\r\n    navigate('/konto');\r\n  };\r\n\r\n  const register = async (email, password) => {\r\n    // Perform registration API request here\r\n    // Assuming the API returns a token\r\n    const response = await fetch('/api/register', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ email, password }),\r\n    });\r\n    const data = await response.json();\r\n    localStorage.setItem('token', data.token);\r\n    const decoded = jwtDecode(data.token);\r\n    setUser(decoded);\r\n    navigate('/konto');\r\n  };\r\n\r\n  const wylogowanie = () => {\r\n    localStorage.removeItem('token');\r\n    setUser(null);\r\n    navigate('/');\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, login, register, wylogowanie }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport { AuthContext, AuthProvider };\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}