{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\szczp\\\\Desktop\\\\projekty\\\\mojprojekt\\\\frontend\\\\moja-aplikacja\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nconst AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchUser = async () => {\n      const response = await fetch('http://127.0.0.1:5000/api/profil', {\n        credentials: 'include'\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setUser(data.user);\n      }\n    };\n    fetchUser();\n  }, []);\n  const login = async (username, password) => {\n    try {\n      const response = await fetch('http://127.0.0.1:5000/api/logowanie', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          password\n        }),\n        credentials: 'include'\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setUser(data.user);\n        navigate('/konto');\n      } else {\n        const error = await response.json();\n        console.error('Error:', error.message);\n      }\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  const register = async (username, password) => {\n    try {\n      const response = await fetch('http://127.0.0.1:5000/api/rejestracja', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          password\n        }),\n        credentials: 'include'\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setUser(data.user);\n        navigate('/konto');\n      } else {\n        const error = await response.json();\n        console.error('Error:', error.message);\n      }\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  const logout = async () => {\n    try {\n      const response = await fetch('http://127.0.0.1:5000/api/wylogowanie', {\n        method: 'POST',\n        credentials: 'include'\n      });\n      if (response.ok) {\n        setUser(null);\n        navigate('/');\n      } else {\n        const error = await response.json();\n        console.error('Error:', error.message);\n      }\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      login,\n      register,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"/48TlfV0adSMEvsbW2gk5sMeopI=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nexport { AuthContext, AuthProvider };\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","navigate","fetchUser","response","fetch","credentials","ok","data","json","login","username","password","method","headers","body","JSON","stringify","error","console","message","register","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/szczp/Desktop/projekty/mojprojekt/frontend/moja-aplikacja/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst AuthContext = createContext();\r\n\r\nconst AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const fetchUser = async () => {\r\n      const response = await fetch('http://127.0.0.1:5000/api/profil', {\r\n        credentials: 'include'\r\n      });\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setUser(data.user);\r\n      }\r\n    };\r\n    fetchUser();\r\n  }, []);\r\n\r\n  const login = async (username, password) => {\r\n    try {\r\n      const response = await fetch('http://127.0.0.1:5000/api/logowanie', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ username, password }),\r\n        credentials: 'include'\r\n      });\r\n\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setUser(data.user);\r\n        navigate('/konto');\r\n      } else {\r\n        const error = await response.json();\r\n        console.error('Error:', error.message);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n    }\r\n  };\r\n\r\n  const register = async (username, password) => {\r\n    try {\r\n      const response = await fetch('http://127.0.0.1:5000/api/rejestracja', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ username, password }),\r\n        credentials: 'include'\r\n      });\r\n\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setUser(data.user);\r\n        navigate('/konto');\r\n      } else {\r\n        const error = await response.json();\r\n        console.error('Error:', error.message);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n    }\r\n  };\r\n\r\n  const logout = async () => {\r\n    try {\r\n      const response = await fetch('http://127.0.0.1:5000/api/wylogowanie', {\r\n        method: 'POST',\r\n        credentials: 'include'\r\n      });\r\n\r\n      if (response.ok) {\r\n        setUser(null);\r\n        navigate('/');\r\n      } else {\r\n        const error = await response.json();\r\n        console.error('Error:', error.message);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, login, register, logout }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport { AuthContext, AuthProvider };\r\nexport default AuthContext;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}